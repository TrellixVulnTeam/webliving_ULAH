import * as React from "react";
import { PluginProps, Room } from "white-web-sdk";
import "./index.less";
import { PluginContext } from "./Plugins";
import { WhiteVideoPluginAttributes } from "./index";
export declare enum IdentityType {
    host = "host",
    guest = "guest",
    listener = "listener"
}
export declare type WhiteVideoPluginProps = {
    room: Room;
} & PluginProps<PluginContext, WhiteVideoPluginAttributes>;
export declare type WhiteVideoPluginStates = {
    play: boolean;
    mute: boolean;
    selfMute: boolean;
    volume: number;
    seek: number;
    currentTime: number;
    isEnd: boolean;
};
export declare type SelfUserInf = {
    identity?: IdentityType;
};
export default class WhiteVideoPluginRoom extends React.Component<WhiteVideoPluginProps, WhiteVideoPluginStates> {
    private readonly reactionPlayDisposer;
    private readonly reactionSeekDisposer;
    private readonly reactionSeekTimeDisposer;
    private readonly reactionVolumeDisposer;
    private readonly reactionMuteDisposer;
    private readonly reactionSyncDisposer;
    private readonly player;
    private syncNode;
    private selfUserInf;
    constructor(props: WhiteVideoPluginProps);
    componentDidMount(): Promise<void>;
    private playerState;
    private handleStartCondition;
    private handleFirstSeek;
    private isHost;
    private setMyIdentityRoom;
    private handleRemoteSeekData;
    private handleRemoteMuteState;
    private handleRemoteVolumeChange;
    private handleRemotePlayState;
    private lastSyncProgressTimestamp;
    private onTimeUpdate;
    private startPlayReaction;
    private handleNativePlayerState;
    private startSeekReaction;
    private startSyncReaction;
    private startSeekTimeReaction;
    private handleSeekReaction;
    private startVolumeReaction;
    private startMuteTimeReaction;
    componentWillUnmount(): void;
    private timeUpdate;
    private detectVideoClickEnable;
    private renderMuteBox;
    private handleRemove;
    private renderDeleteBtn;
    private renderNavigation;
    private handleOnEnd;
    private handleOnLoadedMetadataCapture;
    render(): React.ReactNode;
}
