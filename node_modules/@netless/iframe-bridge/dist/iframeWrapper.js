var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from "react";
import { IframeBridge, DomEvents, IframeEvents } from "./index";
var IframeWrapper = /** @class */ (function (_super) {
    __extends(IframeWrapper, _super);
    function IframeWrapper(props) {
        var _this = _super.call(this, props) || this;
        _this.styleDom = null;
        _this.state = {
            canDisplay: true,
            className: IframeWrapper.hiddenClass,
        };
        _this.injectCss();
        IframeBridge.emitter.on(IframeEvents.Destory, function () {
            _this.setState({ canDisplay: false });
        });
        IframeBridge.emitter.on(IframeEvents.StartCreate, function () {
            _this.setState({ canDisplay: true });
        });
        IframeBridge.emitter.on(IframeEvents.DispayIframe, function () {
            _this.setState({ className: undefined });
        });
        IframeBridge.emitter.on(IframeEvents.HideIframe, function () {
            _this.setState({ className: IframeWrapper.hiddenClass });
        });
        return _this;
    }
    IframeWrapper.prototype.componentDidMount = function () {
        IframeBridge.emitter.emit(DomEvents.WrapperDidMount);
    };
    IframeWrapper.prototype.componentWillUnmount = function () {
        var _a;
        if (this.styleDom) {
            (_a = this.styleDom.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.styleDom);
        }
    };
    IframeWrapper.prototype.componentDidUpdate = function () {
        IframeBridge.emitter.emit(IframeEvents.WrapperDidUpdate);
    };
    IframeWrapper.prototype.injectCss = function () {
        var styleDom = document.createElement("style");
        var styleStr = "\n            ." + IframeWrapper.hiddenClass + " {\n                display: none;\n            }\n        ";
        this.styleDom = styleDom;
        styleDom.appendChild(document.createTextNode(styleStr));
        document.getElementsByTagName("head")[0].appendChild(styleDom);
    };
    IframeWrapper.prototype.render = function () {
        return React.createElement(React.Fragment, null,
            this.props.children,
            this.state.canDisplay && React.createElement("iframe", { id: IframeBridge.kind, className: this.state.className }));
    };
    IframeWrapper.hiddenClass = "netless-iframe-brdige-hidden";
    return IframeWrapper;
}(React.Component));
export { IframeWrapper };
//# sourceMappingURL=iframeWrapper.js.map