import { Base } from "./Base";
import type { Camera, Size, View } from "white-web-sdk";
import type { AppManager } from "./AppManager";
export declare class MainViewProxy extends Base {
    private scale?;
    private cameraStore;
    private started;
    private mainViewIsAddListener;
    private mainView;
    private viewId;
    constructor(manager: AppManager);
    private get mainViewCamera();
    private get mainViewSize();
    private moveCameraSizeByAttributes;
    start(): void;
    setCameraAndSize(): void;
    private cameraReaction;
    private sizeChangeHandler;
    get view(): View;
    get cameraState(): {
        width: number;
        height: number;
        centerX: number;
        centerY: number;
        scale: number;
    };
    createMainView(): View;
    private onCameraUpdatedByDevice;
    addMainViewListener(): void;
    removeMainViewListener(): void;
    private mainViewClickListener;
    mainViewClickHandler(): Promise<void>;
    setMainViewSize: import("lodash").DebouncedFunc<(size: any) => void>;
    private addCameraListener;
    private removeCameraListener;
    private onCameraOrSizeUpdated;
    switchViewModeToWriter(): void;
    moveCameraToContian(size: Size): void;
    moveCamera(camera: Camera): void;
    stop(): void;
    destroy(): void;
}
