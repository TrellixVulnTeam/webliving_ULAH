import type { PublicEvent } from "../index";
import type { Displayer, ViewVisionMode, Room, View } from "white-web-sdk";
import type Emittery from "emittery";
export declare const genAppId: (kind: string) => Promise<string>;
export declare const setViewFocusScenePath: (view: View, focusScenePath: string) => void;
export declare const setScenePath: (room: Room | undefined, scenePath: string) => void;
export declare const setViewMode: (view: View, mode: ViewVisionMode) => void;
export declare const emitError: (error: Error) => void;
export declare const addEmitterOnceListener: (event: any, listener: any) => void;
export declare const notifyMainViewModeChange: import("lodash").DebouncedFunc<(callbacks: Emittery<PublicEvent>, mode: ViewVisionMode) => void>;
export declare const makeValidScenePath: (displayer: Displayer, scenePath: string) => string;
export declare const isValidScenePath: (scenePath: string) => boolean;
export declare const ensureValidScenePath: (scenePath: string) => string;
export declare const getVersionNumber: (version: string) => number;
export declare const wait: (time: number) => Promise<unknown>;
