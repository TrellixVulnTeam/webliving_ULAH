import { TELE_BOX_STATE, TeleBoxManager } from "@netless/telebox-insider";
import type { AddAppOptions, AppInitState } from "./index";
import type { TeleBoxManagerUpdateConfig, ReadonlyTeleBox, TeleBoxColorScheme } from "@netless/telebox-insider";
import type Emittery from "emittery";
import type { AppManager } from "./AppManager";
import type { NetlessApp } from "./typings";
import type { View } from "white-web-sdk";
export { TELE_BOX_STATE };
export declare type CreateBoxParams = {
    appId: string;
    app: NetlessApp;
    view?: View;
    emitter?: Emittery;
    options?: AddAppOptions;
    canOperate?: boolean;
};
declare type AppId = {
    appId: string;
};
declare type MoveBoxParams = AppId & {
    x: number;
    y: number;
};
declare type ResizeBoxParams = AppId & {
    width: number;
    height: number;
    skipUpdate: boolean;
};
declare type SetBoxMinSizeParams = AppId & {
    minWidth: number;
    minHeight: number;
};
declare type SetBoxTitleParams = AppId & {
    title: string;
};
export declare type CreateTeleBoxManagerConfig = {
    collectorContainer?: HTMLElement;
    collectorStyles?: Partial<CSSStyleDeclaration>;
    prefersColorScheme?: TeleBoxColorScheme;
};
export declare class BoxManager {
    private manager;
    teleBoxManager: TeleBoxManager;
    appBoxMap: Map<string, string>;
    private mainView;
    constructor(manager: AppManager, createTeleBoxManagerConfig?: CreateTeleBoxManagerConfig);
    get boxState(): "normal" | "minimized" | "maximized";
    get maximized(): boolean;
    get minimized(): boolean;
    get darkMode(): boolean;
    get prefersColorScheme(): TeleBoxColorScheme;
    createBox(params: CreateBoxParams): void;
    setBoxInitState(appId: string): void;
    setupBoxManager(createTeleBoxManagerConfig?: CreateTeleBoxManagerConfig): TeleBoxManager;
    getBox(appId: string): ReadonlyTeleBox | undefined;
    closeBox(appId: string, skipUpdate?: boolean): ReadonlyTeleBox | undefined;
    boxIsFocus(appId: string): boolean | undefined;
    getFocusBox(): ReadonlyTeleBox | undefined;
    getTopBox(): ReadonlyTeleBox | undefined;
    updateBoxState(state?: AppInitState): void;
    updateManagerRect(): void;
    moveBox({ appId, x, y }: MoveBoxParams): void;
    focusBox({ appId }: AppId, skipUpdate?: boolean): void;
    resizeBox({ appId, width, height, skipUpdate }: ResizeBoxParams): void;
    setBoxMinSize(params: SetBoxMinSizeParams): void;
    setBoxTitle(params: SetBoxTitleParams): void;
    blurAllBox(): void;
    blurFocusBox(): void;
    updateAll(config: TeleBoxManagerUpdateConfig): void;
    setMaximized(maximized: boolean): void;
    setMinimized(minimized: boolean, skipUpdate?: boolean): void;
    focusTopBox(): void;
    setReadonly(readonly: boolean): void;
    setPrefersColorScheme(colorScheme: TeleBoxColorScheme): void;
    destroy(): void;
}
