import { Base } from '../Base';
import { Cursor } from './Cursor';
import type { PositionType } from "../AttributesDelegate";
import type { RoomMember, View } from "white-web-sdk";
import type { AppManager } from "../AppManager";
export declare type EventType = {
    type: PositionType;
    id?: string;
};
export declare type MoveCursorParams = {
    uid: string;
    x: number;
    y: number;
};
export declare class CursorManager extends Base {
    private appManager;
    containerRect?: DOMRect;
    wrapperRect?: DOMRect;
    cursorInstances: Map<string, Cursor>;
    roomMembers?: readonly RoomMember[];
    private mainViewElement?;
    constructor(appManager: AppManager);
    setMainViewDivElement(div: HTMLDivElement): void;
    private startReaction;
    private getUids;
    private handleRoomMembersChange;
    get cursors(): any;
    get boxState(): import("@netless/telebox-insider").TELE_BOX_STATE;
    get focusView(): View | undefined;
    private mouseMoveListener;
    private touchMoveListener;
    private updateCursor;
    private getPoint;
    /**
     *  因为窗口内框在不同分辨率下的大小不一样，所以这里通过来鼠标事件的 target 来判断是在主白板还是在 APP 中
     */
    private getType;
    private initCursorAttributes;
    private setNormalCursorState;
    private mouseLeaveListener;
    updateContainerRect(): void;
    setRoomMembers(members: readonly RoomMember[]): void;
    deleteCursor(uid: string): void;
    hideCursor(uid: string): void;
    cleanMemberAttributes(members: readonly RoomMember[]): void;
    destroy(): void;
}
