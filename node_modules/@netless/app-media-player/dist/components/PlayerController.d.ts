import React, { Component } from "react";
export interface PlayerControllerProps {
    duration: number;
    currentTime: number;
    setCurrentTime: (time: number) => void;
    paused: boolean;
    play: () => void;
    pause: () => void;
    volume: number;
    setVolume: (volume: number) => void;
    buffered: number;
    visible: boolean;
    scale?: number;
}
export interface PlayerControllerStates {
    isPlayerSeeking: boolean;
    isVolumeHover: boolean;
    seekVolume: number;
    visible: boolean;
    currentTime: number;
}
export default class PlayerController extends Component<PlayerControllerProps, PlayerControllerStates> {
    private stageVolume;
    private updateVolumeTimer;
    private onVolumeSeeking;
    constructor(props: PlayerControllerProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    private onClickOperationButton;
    private operationButton;
    private operationVolumeButton;
    private handleClickVolume;
    private onChange;
    private changeTime;
    private onVolumeChange;
    private changeVolume;
    private onVolumeSeekStart;
    private onVolumeSeekEnd;
    private onProgressSeekStart;
    private onProgressSeekEnd;
    render(): React.ReactNode;
}
