import React, { Component } from "react";
export interface Time {
    hh: string;
    mm: string;
    ss: string;
}
export interface VideoSeekSliderProps {
    total: number;
    current: number;
    onChange: (value: number) => void;
    buffered?: number;
    hideHoverTime?: boolean;
    secondsPrefix?: string;
    minutesPrefix?: string;
    limitTimeTooltipBySides?: boolean;
    sliderColor?: string;
    sliderHoverColor?: string;
    thumbColor?: string;
    bufferColor?: string;
    paused?: boolean;
    play?: () => void;
    pause?: () => void;
    onSeekStart?: () => void;
    onSeekEnd?: () => void;
    scale?: number;
}
export interface VideoSeekSliderStates {
    ready: boolean;
    trackWidth: number;
    seekHoverPosition: number;
}
export interface TransformType {
    transform: string;
}
export default class SeekSlider extends Component<VideoSeekSliderProps, VideoSeekSliderStates> {
    private seeking;
    private mobileSeeking;
    private track;
    private hoverTime;
    private offset;
    private secondsPrefix;
    private minutesPrefix;
    private seekPause;
    constructor(props: VideoSeekSliderProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    private handleTouchSeeking;
    private handleSeeking;
    private changeCurrentTimePosition;
    private setTrackWidthState;
    private handleTrackHover;
    private getPositionStyle;
    private getThumbHandlerPosition;
    private getSeekHoverPosition;
    private getHoverTimePosition;
    private secondsToTime;
    private getHoverTime;
    private mouseSeekingHandler;
    private setSeeking;
    private mobileTouchSeekingHandler;
    private setMobileSeeking;
    private isThumbActive;
    private renderBufferProgress;
    private renderProgress;
    private renderHoverProgress;
    private renderThumb;
    private drawHoverTime;
    private onMouseDown;
    private onMouseUp;
    render(): React.ReactNode;
}
