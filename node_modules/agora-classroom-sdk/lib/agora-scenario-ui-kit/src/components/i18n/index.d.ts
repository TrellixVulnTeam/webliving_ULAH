import React from 'react';
export declare const t: (text: string) => string;
export declare const changeLanguage: (language: string) => void;
export declare const setDebugI18n: (debug: boolean) => void;
export declare class MemoryStorage {
    private readonly _storage;
    constructor(_storage?: Map<string, string>);
    getItem(name: string): string | undefined;
    setItem(name: string, value: string): void;
    removeItem(name: string): void;
}
export declare class CustomStorage {
    private storage;
    languageKey: string;
    constructor();
    useSessionStorage(): void;
    read(key: string): any;
    save(key: string, val: any): void;
    clear(key: string): void;
    setLanguage(lang: string): void;
    getLanguage(): any;
}
export declare const storage: CustomStorage;
export declare const getLanguage: () => "en" | "zh";
export declare const transI18n: (text: string, options?: any) => string;
declare type I18nProvider = {
    children: React.ReactChild;
    language: string;
};
export declare const I18nProvider: React.FC<I18nProvider>;
export {};
