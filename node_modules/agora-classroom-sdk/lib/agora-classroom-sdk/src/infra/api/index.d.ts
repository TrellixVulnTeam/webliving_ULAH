import { EduRoomTypeEnum, EduRoleTypeEnum, CourseWareList, EduRegion, IAgoraExtApp, IAgoraWidget, Platform } from 'agora-edu-core';
import { ListenerCallback } from './declare';
import { MediaOptions } from 'agora-rte-sdk';
export declare type LanguageEnum = 'en' | 'zh';
export declare type TranslateEnum = '' | 'auto' | 'zh-CHS' | 'en' | 'ja' | 'ko' | 'fr' | 'es' | 'pt' | 'it' | 'ru' | 'vi' | 'de' | 'ar';
export declare type ConfigParams = {
    appId: string;
    region?: string;
};
/**
 * LaunchOption 接口
 */
export declare type LaunchOption = {
    userUuid: string;
    userName: string;
    roomUuid: string;
    roleType: EduRoleTypeEnum;
    roomType: EduRoomTypeEnum;
    roomName: string;
    listener: ListenerCallback;
    pretest: boolean;
    rtmToken: string;
    language: LanguageEnum;
    startTime: number;
    duration: number;
    courseWareList: CourseWareList;
    recordUrl?: string;
    extApps?: IAgoraExtApp[];
    region?: EduRegion;
    widgets?: {
        [key: string]: IAgoraWidget;
    };
    userFlexProperties?: {
        [key: string]: any;
    };
    mediaOptions?: MediaOptions;
    latencyLevel?: 1 | 2;
    platform?: Platform;
};
export { AgoraEduClassroomEvent } from 'agora-edu-core';
export declare class AgoraEduSDK {
    private static _config;
    private static appId;
    private static region;
    private static convertLanguage;
    private static convertRegion;
    private static convertMediaOptions;
    static setParameters(params: string): void;
    static config(config: ConfigParams): void;
    static launch(dom: HTMLElement, option: LaunchOption): Promise<any>;
}
export * from './declare';
