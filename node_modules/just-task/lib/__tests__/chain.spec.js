"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const task_1 = require("../task");
const chain_1 = require("../chain");
const undertaker_1 = require("../undertaker");
describe('chain', () => {
    it('allows tasks to be injected before another one after definition', done => {
        const callOrder = [];
        const test1Function = jest.fn(() => {
            callOrder.push(1);
        });
        const test2Function = jest.fn(() => {
            callOrder.push(2);
        });
        task_1.task('test1', test1Function);
        task_1.task('test2', test2Function);
        chain_1.chain('test2').before('test1');
        undertaker_1.parallel('test1')(() => {
            expect(test2Function).toBeCalledTimes(1);
            expect(test1Function).toBeCalledTimes(1);
            expect(callOrder).toEqual([2, 1]);
            done();
        });
    });
    it('allows tasks to be injected after another one', done => {
        const callOrder = [];
        const test1Function = jest.fn(() => {
            callOrder.push(1);
        });
        const test2Function = jest.fn(() => {
            callOrder.push(2);
        });
        task_1.task('test1', test1Function);
        task_1.task('test2', test2Function);
        chain_1.chain('test2').after('test1');
        undertaker_1.parallel('test1')(() => {
            expect(test2Function).toBeCalledTimes(1);
            expect(test1Function).toBeCalledTimes(1);
            expect(callOrder).toEqual([1, 2]);
            done();
        });
    });
});
