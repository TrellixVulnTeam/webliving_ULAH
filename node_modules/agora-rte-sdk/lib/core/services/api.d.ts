import { ApiBase } from './base';
import { AgoraRteMediaSourceState } from '../..';
import { AgoraRteMediaPublishState } from '../media/track';
export interface EntryRequestParams {
    userUuid: string;
    roomUuid: string;
    userName: string;
    role: string;
    streamUuid: string;
    stream?: {
        videoSourceState?: AgoraRteMediaSourceState;
        audioSourceState?: AgoraRteMediaSourceState;
    };
}
export declare class AgoraRteService extends ApiBase {
    constructor();
    checkIn(roomUuid: string, userUuid: string, roomName: string, userName: string, userRole: number): Promise<any>;
    entryRoom(params: EntryRequestParams): Promise<any>;
    syncSnapShot(roomUuid: string): Promise<any>;
    syncSequence(roomUuid: string, seqId: number, count: number): Promise<any>;
    updateRoomProperties({ roomUuid, properties, cause, }: {
        roomUuid: string;
        properties: object;
        cause?: object;
    }): Promise<any>;
    deleteRoomProperties({ roomUuid, properties, cause, }: {
        roomUuid: string;
        properties: string[];
        cause?: object;
    }): Promise<any>;
    updateUserProperties({ roomUuid, userUuid, properties, cause, }: {
        roomUuid: string;
        userUuid: string;
        properties: object;
        cause?: string;
    }): Promise<any>;
    deleteUserProperties({ roomUuid, userUuid, properties, cause, }: {
        roomUuid: string;
        userUuid: string;
        properties: string[];
        cause?: any;
    }): Promise<any>;
    upsertStream(roomUuid: string, userUuid: string, streamUuid: string, { publishVideo, publishAudio, }: {
        publishVideo?: AgoraRteMediaPublishState;
        publishAudio?: AgoraRteMediaPublishState;
    }): Promise<any>;
    deleteStream(roomUuid: string, userUuid: string, streamUuid: string): Promise<any>;
    updateDeviceState(roomUuid: string, userUuid: string, streamUuid: string, { videoSourceState, audioSourceState, }: {
        videoSourceState?: AgoraRteMediaSourceState;
        audioSourceState?: AgoraRteMediaSourceState;
    }): Promise<any>;
    sendRoomChatMessage(message: string, roomUuid: string): Promise<any>;
}
