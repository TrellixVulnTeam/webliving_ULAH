import { ActionWhenTaskFail } from '.';
export declare type Task = {
    start: () => void;
    stop: () => void;
    isStopped: boolean;
};
export declare abstract class Duration {
    private static _factors;
    static second(amount: number): number;
    static minute(amount: number): number;
    static hour(amount: number): number;
}
declare class Scheduler {
    private _tasks;
    addPollingTask(runnable: () => void, intervalInMs: number, immediate?: boolean, onFail?: () => ActionWhenTaskFail): Task;
    addDelayTask(runnable: () => void, delayInMs: number): Task;
    addIntervalTask(runnable: () => void, intervalInMs: number, immediate?: boolean, onFail?: () => ActionWhenTaskFail): Task;
}
export declare const createScheduler: () => Scheduler;
export declare const shared: Scheduler;
export {};
