export declare enum InvocationEventType {
    pre = 0,
    post = 1
}
export declare type InvocationEvent = {
    type: InvocationEventType;
    context: Record<string, any>;
    class: string;
    method: string;
    arguments?: any[];
    return?: any;
    error?: Error;
};
export declare type InvocationHandler = (event: InvocationEvent) => void;
export declare type AnyFunction = (...args: any) => any;
export declare namespace Injectable {
    type Logger = Pick<Console, 'info' | 'warn' | 'error' | 'debug'>;
}
