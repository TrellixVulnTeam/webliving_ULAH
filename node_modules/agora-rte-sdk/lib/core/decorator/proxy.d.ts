import { InvocationEvent, InvocationHandler } from './type';
export declare const proxyMethod: (method: Function, proto: any, propertyName: string, handler: InvocationHandler, context: InvocationEvent['context']) => (this: any, ...args: any[]) => any;
export declare const extendConstructor: (constructor: any, handler: InvocationHandler, context: InvocationEvent['context'], extendProps?: any, proxyMethods?: boolean | undefined) => {
    new (...args: any[]): {
        [x: string]: any;
    };
    [x: string]: any;
};
