import { LocalAudioPlaybackVolumeIndicatorEvent, LocalAudioTrackStateEvent, LocalVideoTrackStateEvent } from '../base';
import { AGRtcDeviceInfo } from '../../type';
import { RtcAudioDeviceManagerBase, RtcVideoDeviceManagerBase } from '../base';
import { RtcAdapterWeb } from '.';
export declare class RtcVideoDeviceManagerWeb extends RtcVideoDeviceManagerBase {
    private readonly adapter;
    private _deviceInfo;
    private _deviceIds;
    constructor(adapter: RtcAdapterWeb, noDevicePermission?: boolean);
    onLocalVideoTrackStateChanged(cb: LocalVideoTrackStateEvent): number;
    onLocalCameraListChanged(cb: (addNewDevice: boolean, newDevices: AGRtcDeviceInfo[], allDevices: AGRtcDeviceInfo[]) => void): number;
    getVideoCameraDevices(): AGRtcDeviceInfo[];
    get cameraList(): AGRtcDeviceInfo[];
    private _emitCameraListChanged;
    private _initializeDeviceList;
}
export declare class RtcAudioDeviceManagerWeb extends RtcAudioDeviceManagerBase {
    private readonly adapter;
    private _recordingDeviceInfo;
    private _recordingDeviceIds;
    private _playbackDeviceInfo;
    private _playbackDeviceIds;
    constructor(adapter: RtcAdapterWeb, noDevicePermission?: boolean);
    onLocalAudioPlaybackTestVolumeChanged(cb: LocalAudioPlaybackVolumeIndicatorEvent): number;
    onLocalAudioTrackStateChanged(cb: LocalAudioTrackStateEvent): number;
    onLocalAudioVolume(cb: (volume: number) => void): number;
    onLocalRecordingDeviceListChanged(cb: (addNewDevice: boolean, newDevices: AGRtcDeviceInfo[], allDevices: AGRtcDeviceInfo[]) => void): number;
    onLocalPlaybackDeviceListChanged(cb: (addNewDevice: boolean, newDevices: AGRtcDeviceInfo[], allDevices: AGRtcDeviceInfo[]) => void): number;
    get microphoneList(): AGRtcDeviceInfo[];
    get speakerList(): AGRtcDeviceInfo[];
    private _emitPlaybackListChanged;
    private _emitRecordingListChanged;
    private _initializePlaybackDeviceList;
    private _initializeDeviceList;
    getAudioPlaybackDevices(): AGRtcDeviceInfo[];
    getAudioRecordingDevices(): AGRtcDeviceInfo[];
}
