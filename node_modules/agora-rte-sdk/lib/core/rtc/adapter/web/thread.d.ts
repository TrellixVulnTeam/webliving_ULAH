import { AgoraRteThread } from '../../../utils/thread';
import { AgoraRtcVideoCanvas } from '../../canvas';
import { AgoraRteMediaSourceState } from '../../type';
import { IAgoraRTCClient, IAgoraRTCRemoteUser, ILocalTrack, IRemoteAudioTrack } from 'agora-rtc-sdk-ng';
export declare class AgoraRteMediaTrackThread extends AgoraRteThread {
    track?: ILocalTrack;
}
export declare class AgoraRteCameraThread extends AgoraRteMediaTrackThread {
    canvas?: AgoraRtcVideoCanvas;
    trackState: AgoraRteMediaSourceState;
    cameraEnable: boolean;
    private _deviceId?;
    private _deviceChanged;
    private setCameraTrackState;
    setDevice(deviceId: string): void;
    onExecution(): Promise<void>;
}
export declare class AgoraRteMicrophoneThread extends AgoraRteMediaTrackThread {
    micEnable: boolean;
    private _recordingDeviceId?;
    private _recordingDeviceChanged;
    trackState: AgoraRteMediaSourceState;
    private _volumePollingTask?;
    setMicTrackState(state: AgoraRteMediaSourceState, reason?: string): void;
    setRecordingDevice(deviceId: string): void;
    onExecution(): Promise<void>;
}
export declare class AgoraRteScreenShareThread extends AgoraRteMediaTrackThread {
    canvas?: AgoraRtcVideoCanvas;
    audioTrack?: ILocalTrack;
    withAudio: boolean;
    screenEnable: boolean;
    trackState: AgoraRteMediaSourceState;
    get playing(): boolean | undefined;
    setScreenShareTrackState(state: AgoraRteMediaSourceState, reason?: number): void;
    onExecution(): Promise<void>;
}
export declare class AgoraRtePublishThread extends AgoraRteThread {
    private _client;
    mute: boolean;
    private _trackThread?;
    get track(): ILocalTrack | undefined;
    constructor(client: IAgoraRTCClient);
    setTrackThread(trackThread: AgoraRteMediaTrackThread): void;
    handleTrackStateChanged(state: AgoraRteMediaSourceState): void;
    isTrackPublished(track: ILocalTrack): boolean;
    onExecution(): Promise<void>;
}
export declare class AgoraRteSubscribeThread extends AgoraRteThread {
    private _client;
    private _user;
    private _channelName;
    readonly _muteMap: Map<string, boolean>;
    readonly _canvasMap?: Map<string, AgoraRtcVideoCanvas>;
    private _mediaType;
    private _volumePollingTask?;
    get mute(): boolean;
    get streamUuid(): string;
    get canvas(): AgoraRtcVideoCanvas | undefined;
    constructor(client: IAgoraRTCClient, user: IAgoraRTCRemoteUser, { channelName, muteMap, canvasMap, mediaType, }: {
        channelName: string;
        muteMap: Map<string, boolean>;
        canvasMap?: Map<string, AgoraRtcVideoCanvas>;
        mediaType: 'video' | 'audio';
    });
    isTrackSubscribed(): boolean;
    get track(): import("agora-rtc-sdk-ng").IRemoteVideoTrack | IRemoteAudioTrack | undefined;
    onExecution(): Promise<void>;
}
