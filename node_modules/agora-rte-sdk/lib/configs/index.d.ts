import { AGRtcConfig } from '../core/rtc/adapter';
declare global {
    interface Window {
        isElectron: boolean;
    }
}
export declare enum AgoraRteLogLevel {
    OFF = 0,
    ERROR = 1,
    WARN = 2,
    INFO = 3,
    DEBUG = 4,
    VERBOSE = 5
}
export declare enum AgoraRteRuntimePlatform {
    Electron = 0,
    Web = 1
}
export interface AgoraRteServiceConfig {
    host?: string;
    pathPrefix?: string;
    headers?: Record<string, string | number>;
}
export declare enum RteLanguage {
    zh = "zh",
    en = "en"
}
export declare enum AgoraRegion {
    CN = "CN",
    AP = "AP",
    EU = "EU",
    NA = "NA"
}
export declare type AgoraComponentRegion = 'AREA_GLOBAL' | 'AREA_AS' | 'AREA_EUR' | 'AREA_NA';
export interface AgoraRteOptions {
    language?: RteLanguage;
    region?: AgoraRegion;
    rtcConfigs?: Partial<AGRtcConfig>;
}
export declare class AgoraRteEngineConfig {
    private static _config?;
    static get shared(): AgoraRteEngineConfig;
    static setConfig(config: AgoraRteEngineConfig): void;
    appId: string;
    service: AgoraRteServiceConfig;
    rtcConfigs: AGRtcConfig;
    logFilePath?: string;
    static logLevel: AgoraRteLogLevel;
    static get platform(): AgoraRteRuntimePlatform;
    userId: string;
    token: string;
    ignoreUrlRegionPrefix: boolean;
    language: RteLanguage;
    debugI18n: boolean;
    region: AgoraRegion;
    SCENE_JOIN_RETRY_ATTEMPTS: number;
    constructor(appId: string, opts?: AgoraRteOptions);
    static get version(): string;
}
