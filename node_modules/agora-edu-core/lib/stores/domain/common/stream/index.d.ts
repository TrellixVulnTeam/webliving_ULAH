import { AgoraRteMediaPublishState, AGRenderMode } from 'agora-rte-sdk';
import { EduStoreBase } from '../base';
import { EduStream } from './struct';
export declare class StreamStore extends EduStoreBase {
    private _disposers;
    private _stateKeeper?;
    streamByStreamUuid: Map<string, EduStream>;
    streamByUserUuid: Map<string, Set<string>>;
    userStreamRegistry: Map<string, boolean>;
    streamVolumes: Map<string, number>;
    shareStreamTokens: Map<string, string>;
    get shareStreamToken(): string | undefined;
    get localCameraStreamUuid(): string | undefined;
    get localMicStreamUuid(): string | undefined;
    get localShareStreamUuid(): string | undefined;
    setupLocalVideo: (stream: EduStream, dom: HTMLElement, mirror?: boolean) => void;
    setupRemoteVideo: (stream: EduStream, dom: HTMLElement, mirror: boolean, renderMode?: AGRenderMode | undefined) => void;
    updateLocalPublishState(state: {
        videoState?: AgoraRteMediaPublishState;
        audioState?: AgoraRteMediaPublishState;
    }): Promise<void>;
    updateRemotePublishState(userUuid: string, streamUuid: string, state: {
        videoState?: AgoraRteMediaPublishState;
        audioState?: AgoraRteMediaPublishState;
    }): Promise<void>;
    publishScreenShare(): Promise<any>;
    unpublishScreenShare(): Promise<any>;
    private _addStream2UserSet;
    private _removeStreamFromUserSet;
    private _addEventHandlers;
    onInstall(): void;
    onDestroy(): void;
}
