import { AgoraComponentRegion, AgoraRteEngine, AgoraRteScene, AgoraRteSceneJoinRTCOptions, AGRtcConnectionType, RtcState } from 'agora-rte-sdk';
import { ClassroomState, WhiteboardState } from '../../../type';
import { EduStoreBase } from './base';
import { RoomPhase } from 'white-web-sdk';
import { ClassroomSchedule } from './room/type';
export declare type CheckInData = {
    vid: number;
    clientServerTime: number;
    classRoomSchedule: ClassroomSchedule;
    rtcRegion: AgoraComponentRegion;
    rtmRegion: AgoraComponentRegion;
};
export declare enum LeaveReason {
    leave = 0,
    kickOut = 1
}
export declare class ConnectionStore extends EduStoreBase {
    classroomState: ClassroomState;
    classroomStateErrorReason?: string;
    whiteboardState: WhiteboardState;
    rtcState: RtcState;
    rtcSubState: RtcState;
    scene?: AgoraRteScene;
    engine?: AgoraRteEngine;
    checkInData?: CheckInData;
    setClassroomState(state: ClassroomState, reason?: string): void;
    setWhiteboardState(state: RoomPhase): void;
    setRtcState(state: RtcState, connectionType?: AGRtcConnectionType): void;
    setScene(scene?: AgoraRteScene): void;
    setCheckInData(checkInData: CheckInData): void;
    initialize(): void;
    getEngine(): AgoraRteEngine;
    joinClassroom(): Promise<undefined>;
    leaveClassroom(reason: LeaveReason): Promise<void>;
    joinRTC(options?: AgoraRteSceneJoinRTCOptions): Promise<undefined>;
    leaveRTC(connectionType?: AGRtcConnectionType): Promise<void>;
    joinWhiteboard(): Promise<undefined>;
    leaveWhiteboard(): Promise<void>;
    getRtcState(connectionType: AGRtcConnectionType): RtcState;
    private _getClassroomState;
    onInstall(): void;
    onDestroy(): void;
}
