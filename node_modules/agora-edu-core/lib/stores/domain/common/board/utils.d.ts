import { FetchImageResult, BaseImageSize, Identity } from '../../../../type';
import { WhiteboardTool } from './type';
import { ApplianceNames, JoinRoomParams, ViewMode } from 'white-web-sdk';
import { EduRoleTypeEnum } from '../../../..';
export declare const convertAGToolToWhiteTool: (tool: WhiteboardTool) => ApplianceNames | undefined;
export declare const getImageSize: (imageInnerSize: BaseImageSize) => BaseImageSize;
export declare const fetchNetlessImageByUrl: (url: string) => Promise<FetchImageResult>;
export declare const rgbToHexColor: (r: number, g: number, b: number) => string;
/**
 * Mimetypes
 *
 * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm
 * @typedef Mimetypes~Kind
 * @enum
 */
export declare const MimeTypesKind: Record<string, string>;
export declare const testPpt: {
    isActive: boolean;
    id: string;
    name: string;
    ext: string;
    type: string;
    size: string;
    taskUuid: string;
    taskProgress: {
        totalPageSize: number;
        convertedPageSize: number;
        convertedPercentage: number;
        convertedFileList: never[];
    };
    url: string;
    convertedPercentage: number;
    updateTime: number;
    scenes: {
        name: string;
        ppt: {
            src: string;
            width: number;
            height: number;
            preview: string;
        };
    }[];
    access: string;
    progress: number;
    status: string;
};
export declare const getJoinRoomParams: (role: EduRoleTypeEnum) => Partial<JoinRoomParams> & {
    identity: Identity;
    viewMode: ViewMode;
};
