import { EduStoreBase } from '../base';
import { MountParams, WindowManager } from '@netless/window-manager';
import { Room } from 'white-web-sdk';
import { WhiteboardTool } from './type';
import { CloudDriveCourseResource, CloudDriveImageResource, CloudDriveMediaResource, CloudDriveResource } from '../cloud-drive/struct';
import { Color } from '../../../../type';
import { EduRoleTypeEnum } from '../../../../type';
export declare class BoardStore extends EduStoreBase {
    selectedTool: WhiteboardTool;
    strokeColor: Color;
    strokeWidth: number;
    ready: boolean;
    grantUsers: Set<string>;
    configReady: boolean;
    get currentColor(): string;
    joinBoard(role: EduRoleTypeEnum): Promise<undefined>;
    leaveBoard: () => Promise<void>;
    mount: (dom: HTMLDivElement, options?: Pick<MountParams, 'containerSizeRatio' | 'collectorContainer'>) => void;
    unmount: () => void;
    grantPermission(userUuid: string): void;
    revokePermission(userUuid: string): void;
    setTool(tool: WhiteboardTool): void;
    openResource(resource: CloudDriveResource): Promise<void>;
    putCourseResource(resource: CloudDriveCourseResource): Promise<void>;
    putMediaResource(resource: CloudDriveMediaResource): Promise<void>;
    putImageResource(resource: CloudDriveImageResource): Promise<void>;
    changeStroke(value: any): void;
    changeHexColor(colorHex: string): void;
    private _whiteBoardContainer?;
    private _room?;
    private _windowManager?;
    private handleRoomPropertiesChange;
    private restoreWhiteboardMemberStateTo;
    private _whiteboardEventListeners;
    protected get room(): Room;
    protected setRoom(room?: Room): void;
    protected get writableRoom(): Room;
    protected get windowManager(): WindowManager;
    private _createBoardClient;
    private _joinBoradRoom;
    private _disposers;
    onInstall(): void;
    onDestroy(): void;
}
