import { EduUser } from '../user/struct';
import { TrackState } from './type';
export declare type Progress = {
    userUuid: string;
    ts: number;
};
export declare enum CoVideoAction {
    studentHandsUp = 1,
    teacherAccept = 2,
    teacherRefuse = 3,
    studentCancel = 4,
    studentOffStage = 6,
    teacherReplayTimeout = 7,
    carousel = 10
}
declare type Operator = {
    role: string;
    userName: string;
    userUuid: string;
};
declare type Cause = {
    cmd: number;
    data: {
        processUuid: string;
        addProgress: Progress[];
        addAccepted: Progress[];
        removeProgress: Progress[];
        removeAccepted: Progress[];
        actionType: CoVideoAction;
        cmd: number;
        extAppCause: any;
    };
};
declare type Delegate = {
    fireExtAppDidUpdate(apps: Record<string, any>, extAppCause: any): void;
    fireWidgetsTrackStateChange(trackState: TrackState): void;
    fireExtappsTrackStateChange(trackState: TrackState): void;
    getUserById(userUuid: string): EduUser | undefined;
};
export declare const escapeExtAppIdentifier: (appIdentifier: string, inverse?: boolean | undefined) => string;
declare class CMDHandler {
    private _delegate;
    cache: {
        prev(key: string): any;
        next(key: string, value: any): void;
    };
    extApps: any;
    constructor(_delegate: Delegate);
    exec(operator: Operator, cause: Cause, changedProperties: any): void;
    private handleHandup;
    private handleExtAppEvents;
    private handleUpdateTrackState;
}
export default CMDHandler;
