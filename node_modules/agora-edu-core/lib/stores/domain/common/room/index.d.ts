import { EduStoreBase } from '../base';
import { CarouselSetting, ClassroomSchedule, ClassState, HandUpProgress, IMConfig, RecordStatus, TrackData, TrackState } from './type';
/**
 * 负责功能：
 * 1.初始化教室 roomProperties
 * 2.监听教室数据变更
 *    * flexProps
 *    * rewards
 * 3.教室状态变更
 * 4.轮播
 *    * 开启
 *    * 关闭
 * 9.聊天控制
 *    * 禁言
 *    * 解除禁言
 * 10.销毁教室
 */
export declare class RoomStore extends EduStoreBase {
    private _cmdHandler;
    private _clientServerTimeShift;
    private _clockRefreshTask?;
    private _disposers;
    /** Observables */
    carousel: CarouselSetting;
    waveArmList: HandUpProgress[];
    acceptedList: HandUpProgress[];
    flexProps: Record<string, any>;
    extAppProperties: Record<string, any>;
    extAppsCommon: Record<string, {
        state: number;
    }>;
    widgetsTrackState: TrackState;
    extappsTrackState: TrackState;
    classroomSchedule: ClassroomSchedule;
    chatMuted: boolean;
    clockTime: number;
    recordStatus: RecordStatus;
    screenShareStreamUuid?: string;
    imConfig?: IMConfig;
    /** Methods */
    private startClockRefreshTask;
    /** Actions */
    private handleRoomPropertiesChange;
    startCarousel(params: {
        range: number;
        type: number;
        interval: number;
    }): Promise<void>;
    stopCarousel(): Promise<void>;
    updateClassState(state: ClassState): Promise<void>;
    sendRewards(roomUuid: string, rewards: {
        userUuid: string;
        changeReward: number;
    }[]): Promise<void>;
    updateWidgetTrackState(widgetId: string, data: TrackData): Promise<void>;
    deleteWidgetTrackState(widgetId: string): Promise<void>;
    deleteExtappTrackState(extappId: string): Promise<void>;
    updateExtappTrackState(extappId: string, data: TrackData): Promise<void>;
    private tickClock;
    /** Getters */
    get clientServerTimeShift(): number;
    get roomUuid(): string;
    get roomType(): import("../../../..").EduRoomTypeEnum;
    get userUuid(): string;
    get userRole(): import("../../../..").EduRoleTypeEnum;
    get roomName(): string;
    get userName(): string;
    /** Computed */
    onInstall(): void;
    onDestroy(): void;
}
