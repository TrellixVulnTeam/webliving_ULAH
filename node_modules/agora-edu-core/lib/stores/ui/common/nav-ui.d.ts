import { AGNetworkQuality } from 'agora-rte-sdk';
import { EduUIStoreBase } from './base';
import { ClassState } from '../../domain/common/room/type';
export interface EduNavAction {
    title: string;
    iconType: string;
    iconColor?: string;
    onClick: () => void;
}
export declare enum TimeFormatType {
    Timeboard = 0,
    Message = 1
}
export declare class NavigationBarUIStore extends EduUIStoreBase {
    onInstall(): void;
    isRecording: boolean;
    /**
     * 准备好挂载到 DOM
     * @returns
     */
    get readyToMount(): boolean;
    /**
     * 顶部导航栏按钮列表
     * @returns
     */
    get actions(): EduNavAction[];
    /**
     * 教室时间信息
     * @returns
     */
    get classroomSchedule(): import("../../domain/common/room/type").ClassroomSchedule;
    /**
     * 教室状态
     * @returns
     */
    get classState(): ClassState | undefined;
    /**
     * 服务器时间
     * @returns
     */
    get calibratedTime(): number;
    /**
     * 教室持续时间
     * @returns
     */
    get classTimeDuration(): number;
    /**
     * 教室状态文字
     * @returns
     */
    get classStatusText(): string;
    /**
     * 教室状态文字颜色
     * @returns
     */
    get classStatusTextColor(): "#677386" | "#F04C36" | undefined;
    /**
     * 是否为开始上课
     * @returns
     */
    get isBeforeClass(): boolean;
    /**
     * 网络质量状态
     * @returns
     */
    get networkQualityClass(): string;
    /**
     * 网络质量状态图标
     * @returns
     */
    get networkQualityIcon(): 'normal-signal' | 'bad-signal' | 'unknown-signal';
    /**
     * 网络质量状态
     * @returns
     */
    get networkQualityLabel(): string;
    /**
     * CPU 用量
     * @returns
     */
    get cpuValue(): number | undefined;
    /**
     * CPU 负载百分比
     * @returns
     */
    get cpuLabel(): string;
    /**
     * 丢包率
     * @returns
     */
    get packetLoss(): string;
    /**
     * 网络质量状态
     * @returns
     */
    get networkQuality(): AGNetworkQuality;
    /**
     * 网络延时
     * @returns
     */
    get delay(): string;
    /**
     * 设置录制状态
     */
    revertRecordingState(): void;
    /**
     * 导航栏标题
     * @returns
     */
    get navigationTitle(): string;
    /**
     * 倒计时格式化
     * @param time
     * @param mode
     * @returns
     */
    formatCountDown(time: number, mode: TimeFormatType): string;
    /**
     * 开始上课
     */
    startClass(): Promise<void>;
    onDestroy(): void;
}
