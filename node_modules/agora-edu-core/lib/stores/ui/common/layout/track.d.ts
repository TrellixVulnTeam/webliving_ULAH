import { EduUIStoreBase } from '../base';
import { EduClassroomStore } from '../../../domain';
import { EduShareUIStore } from '../share-ui';
import { Dimensions, Margin, Point } from '../../../domain/common/track/type';
export declare class TrackUIStore extends EduUIStoreBase {
    private _extAppTrackContext;
    private _widgetTrackContext;
    constructor(store: EduClassroomStore, shareUIStore: EduShareUIStore);
    /**
     * 初始化轨迹同步
     * @param
     */
    initialize({ margin }: {
        margin: Margin;
    }): void;
    destroy(): void;
    /**
     * 设置 Widget 组件轨迹同步信息
     * @param trackId
     * @param end
     * @param pos
     * @param dimensions
     */
    setWidgetTrackById(trackId: string, end: boolean, pos: Point, dimensions?: Dimensions): void;
    /**
     * 设置 ExtApp 组件轨迹同步信息
     * @param trackId
     * @param end
     * @param pos
     * @param dimensions
     */
    setExtAppTrackById(trackId: string, end: boolean, pos: Point, dimensions?: Dimensions): void;
    /**
     * 移除 Widget 组件轨迹同步信息
     * @param trackId
     */
    deleteWidgetTrackById(trackId: string): void;
    /**
     * 移除 ExtApp 组件轨迹同步信息
     * @param trackId
     */
    deleteExtAppTrackById(trackId: string): void;
    /**
     * Widget 组件轨迹同步信息
     */
    get widgetTrackById(): Map<string, import("../../../domain").Track>;
    /**
     * ExtApp 组件轨迹同步信息
     */
    get extAppTrackById(): Map<string, import("../../../domain").Track>;
    /**
     * 获取可移动范围参数
     * @param boundaryName
     * @returns
     */
    private getBounds;
    /**
     * 重新计算轨迹同步上下文参数
     * @param boundaryName
     */
    updateTrackContext(boundaryName: string): void;
    onDestroy(): void;
    onInstall(): void;
}
