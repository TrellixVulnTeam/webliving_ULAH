import { AGError } from 'agora-rte-sdk';
import { ConfirmDialogAction, orientationEnum } from '../../../type';
export declare enum DialogCategory {
    CloudDriver = 0,
    Roster = 1,
    KickOut = 2,
    ErrorGeneric = 3,
    Confirm = 4,
    DeviceSetting = 5,
    ScreenPicker = 6
}
export interface ToastType {
    id: string;
    desc: string;
    type?: ToastTypeEnum;
}
export declare type ToastTypeEnum = 'success' | 'error' | 'warning';
export interface DialogType {
    id: string;
    category: DialogCategory;
    props?: any;
}
export declare class EduShareUIStore {
    private _aspectRatio;
    private _classroomMinimumSize;
    private _containerNode;
    private _navBarHeight;
    private _matchMedia;
    /**
     * 模态框列表
     */
    dialogQueue: DialogType[];
    /**
     * Toast 列表
     */
    toastQueue: ToastType[];
    /**
     * 视口尺寸信息
     */
    classroomViewportSize: {
        width: number;
        height: number;
    };
    orientation: orientationEnum;
    constructor();
    /**
     * 显示一条 Toast 信息
     * @param desc
     * @param type
     * @returns
     */
    addToast(desc: string, type?: ToastTypeEnum): string;
    /**
     * 移除 Toast 信息
     * @param id
     * @returns
     */
    removeToast(id: string): string;
    /**
     * 显示错误提示模态框
     * @param error
     * @param opts
     */
    addGenericErrorDialog(error: AGError, opts?: {
        onOK?: () => void;
        okBtnText?: string;
    }): void;
    /**
     * 显示确认模态框
     * @param title
     * @param content
     * @param onOK
     * @param actions
     * @param onCancel
     */
    addConfirmDialog(title: string, content: string, onOK?: () => void, actions?: ConfirmDialogAction[], onCancel?: () => void): void;
    /**
     * 显示模态框
     * @param category
     * @param props
     * @returns
     */
    addDialog(category: DialogCategory, props?: any): any;
    /**
     * 移除模态框
     * @param id
     */
    removeDialog(id: string): void;
    /** Actions */
    /**
     * 更新教室视口尺寸信息
     */
    updateClassroomViewportSize(): void;
    handleOrientationchange(): void;
    /**
     * 设置导航栏高度，设置 Resize 事件处理器
     * @param navBarHeight
     */
    addWindowResizeEventListenerAndSetNavBarHeight(navBarHeight: number): void;
    /**
     * 移除 Resize 事件处理器
     */
    removeWindowResizeEventListener(): void;
    addOrientationchange(): void;
    removeOrientationchange(): void;
    /**
     * 顶部导航栏高度
     * @returns
     */
    get navBarHeight(): number;
}
