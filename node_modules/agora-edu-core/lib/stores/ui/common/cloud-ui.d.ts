import { EduUIStoreBase } from './base';
import { CloudDriveResource } from '../../domain/common/cloud-drive/struct';
import { CloudDrivePagingOption } from '../../domain/common/cloud-drive/type';
interface UploadItem {
    iconType?: string;
    fileName?: string;
    fileSize?: string;
    currentProgress?: number;
    uploadComplete?: boolean;
}
export declare class CloudUIStore extends EduUIStoreBase {
    readonly pageSize: number;
    onInstall(): void;
    /**
     * 根据类型返回扩展名
     * @param name
     * @returns
     */
    fileNameToType(name: string): string;
    /**
     * 文件大小信息格式化
     * @param fileByteSize
     * @param decimalPoint
     * @returns
     */
    formatFileSize(fileByteSize: number, decimalPoint?: number): string;
    /**
     * 查询个人资源列表
     * @param options
     * @returns
     */
    fetchPersonalResources(options: CloudDrivePagingOption): Promise<{
        list: never[];
        total: number;
    } | undefined>;
    /**
     * 上传文件至个人资源
     * @param file
     * @returns
     */
    uploadPersonalResource(file: File): Promise<undefined>;
    /**
     * 打开课件
     * @param resource
     */
    openResource(resource: CloudDriveResource): Promise<void>;
    /**
     * 公共资源
     * @returns
     */
    get publicResources(): Map<string, CloudDriveResource>;
    /**
     * 个人资源左侧选项框状态
     */
    personalResourcesCheckSet: Set<string>;
    /**
     * 个人资源页码
     */
    currentPersonalResPage: number;
    /**
     * 个人资源全选
     */
    isPersonalResSelectedAll: boolean;
    /**
     * 云盘资源列表
     */
    get personalResources(): Map<string, CloudDriveResource>;
    /**
     * 个人云盘资源数
     */
    get personalResourcesTotalNum(): number;
    /**
     * 云盘资源列表（左侧选择框使用）
     * @returns
     */
    get personalResourcesList(): {
        resource: CloudDriveResource;
        checked: boolean;
    }[];
    /**
     * 是否有选中资源文件
     * @returns
     */
    get hasSelectedPersonalRes(): boolean;
    /**
     * 资源上传进度
     * @returns
     */
    get uploadingProgresses(): UploadItem[];
    /**
     * 勾选资源文件
     * @param resourceUuid
     * @param val
     */
    setPersonalResourceSelected: (resourceUuid: string, val: boolean) => void;
    /**
     * 资源列表全选
     * @param val
     */
    setAllPersonalResourceSelected: (val: boolean) => void;
    /**
     * 设置资源列表页码
     * @param num
     */
    setPersonalResCurrentPage: (num: number) => void;
    /**
     * 删除个人资源
     * @returns
     */
    removePersonalResources: () => Promise<void>;
    onDestroy(): void;
}
export {};
