export declare const iterateMap: <K, V, T, E>(map: Map<K, V>, processors?: {
    onFilter?: ((key: K, item: V) => boolean) | undefined;
    onMap?: ((key: K, item: V) => T) | undefined;
    onReduce?: ((prev: E, key: K, item: V) => E) | undefined;
} | undefined) => {
    list: T[];
    prev: E;
};
export declare const iterateSet: <V, T, E>(map: Set<V>, processors?: {
    onFilter?: ((item: V) => boolean) | undefined;
    onMap?: ((item: V) => T) | undefined;
    onReduce?: ((prev: E, item: V) => E) | undefined;
} | undefined) => {
    list: T[];
    prev: E;
};
