import { CloudDriveResourceConvertProgress } from './stores/domain/common/cloud-drive/type';
export declare enum ClassroomState {
    Idle = 0,
    Connecting = 1,
    Connected = 2,
    Reconnecting = 3,
    Error = 4
}
export declare enum WhiteboardState {
    Idle = 0,
    Connecting = 1,
    Connected = 2,
    Reconnecting = 3
}
/**
 * 教育SDK房间枚举
 * Room1v1Class = 1，1v1
 * RoomSmallClass = 4，小班课
 */
export declare enum EduRoomTypeEnum {
    Room1v1Class = 0,
    RoomSmallClass = 4,
    RoomBigClass = 2
}
/**
 * 教育SDK角色枚举
 * invisible = 0,为观众
 * teacher = 1，为老师
 * student = 2，为学生
 * assistant = 3，为助教
 */
export declare enum EduRoleTypeEnum {
    none = -1,
    invisible = 0,
    teacher = 1,
    student = 2,
    assistant = 3
}
export interface EduSessionInfo {
    roomUuid: string;
    roomName: string;
    roomType: EduRoomTypeEnum;
    userUuid: string;
    userName: string;
    role: EduRoleTypeEnum;
    token: string;
    flexProperties: any;
    duration: number;
}
export declare type StorageCourseWareItem = {
    size: string;
    updateTime: string;
    progress: number;
    resourceName: string;
    resourceUuid: string;
    taskUuid: string;
    status: DownloadFileStatus;
    type: StorageFileType;
    download?: boolean;
};
export interface BoardToolItem {
    value: string;
    label: any;
    icon: string;
    isActive?: boolean;
    hover?: boolean;
    component?: any;
}
export declare enum DownloadFileStatus {
    Cached = "cached",
    Downloading = "downloading",
    NotCached = "NotCached"
}
export declare type StorageFileType = string;
export declare type CourseWareItem = {
    resourceName: string;
    resourceUuid: string;
    ext: string;
    url: string;
    conversion: {
        type: string;
    };
    size: number;
    updateTime: number;
    convert?: boolean;
    taskUuid?: string;
    taskToken?: string;
    taskProgress?: CloudDriveResourceConvertProgress;
    isActive?: boolean;
};
export declare type CourseWareList = CourseWareItem[];
export declare type AgoraConvertedFile = {
    width: number;
    height: number;
    ppt: {
        width: number;
        src: string;
        height: number;
    };
    conversionFileUrl: string;
};
export declare type ConvertedFileList = AgoraConvertedFile[];
export declare type FetchImageResult = {
    width: number;
    height: number;
    file: File;
    uuid: string;
    url: string;
};
export declare type BaseImageSize = {
    width: number;
    height: number;
};
export declare type Color = {
    r: number;
    g: number;
    b: number;
};
export declare enum Identity {
    host = "host",
    guest = "guest"
}
export declare enum AgoraEduEventType {
    classroomEvents = "classroom-events",
    interactionEvents = "interaction-events"
}
export declare enum AgoraEduClassroomEvent {
    Ready = 1,
    Destroyed = 2,
    KickOut = 101,
    TeacherTurnOnMyMic = 102,
    TeacherTurnOffMyMic = 103,
    TeacherGrantPermission = 104,
    TeacherRevokePermission = 105,
    UserAcceptToStage = 106,
    UserLeaveStage = 107,
    RewardReceived = 108,
    TeacherTurnOnMyCam = 109,
    TeacherTurnOffMyCam = 110,
    CurrentCamUnplugged = 111,
    CurrentMicUnplugged = 112,
    CurrentSpeakerUnplugged = 113,
    CaptureScreenPermissionDenied = 114,
    ScreenShareStarted = 115,
    ScreenShareEnded = 116
}
export declare type ConfirmDialogAction = 'ok' | 'cancel';
export declare enum orientationEnum {
    portrait = "portrait",
    landscape = "landscape"
}
